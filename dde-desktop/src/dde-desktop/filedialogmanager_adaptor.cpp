/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -i filedialogmanager_adaptor.h -l DBusFileDialogManager -a :filedialogmanager_adaptor.cpp /data/home/lmh/0330/dde-file-manager/src/dde-desktop/dbus/filedialog/com.deepin.filemanager.filedialogmanager.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "filedialogmanager_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class FiledialogmanagerAdaptor
 */

FiledialogmanagerAdaptor::FiledialogmanagerAdaptor(DBusFileDialogManager *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

FiledialogmanagerAdaptor::~FiledialogmanagerAdaptor()
{
    // destructor
}

bool FiledialogmanagerAdaptor::canUseFileChooserDialog(const QString &group, const QString &executableFileName)
{
    // handle method call com.deepin.filemanager.filedialogmanager.canUseFileChooserDialog
    return parent()->canUseFileChooserDialog(group, executableFileName);
}

QDBusObjectPath FiledialogmanagerAdaptor::createDialog(const QString &key)
{
    // handle method call com.deepin.filemanager.filedialogmanager.createDialog
    return parent()->createDialog(key);
}

void FiledialogmanagerAdaptor::destroyDialog(const QDBusObjectPath &path)
{
    // handle method call com.deepin.filemanager.filedialogmanager.destroyDialog
    parent()->destroyDialog(path);
}

QList<QDBusObjectPath> FiledialogmanagerAdaptor::dialogs()
{
    // handle method call com.deepin.filemanager.filedialogmanager.dialogs
    return parent()->dialogs();
}

QString FiledialogmanagerAdaptor::errorString()
{
    // handle method call com.deepin.filemanager.filedialogmanager.errorString
    return parent()->errorString();
}

QStringList FiledialogmanagerAdaptor::globPatternsForMime(const QString &mime)
{
    // handle method call com.deepin.filemanager.filedialogmanager.globPatternsForMime
    return parent()->globPatternsForMime(mime);
}

bool FiledialogmanagerAdaptor::isUseFileChooserDialog()
{
    // handle method call com.deepin.filemanager.filedialogmanager.isUseFileChooserDialog
    return parent()->isUseFileChooserDialog();
}

QStringList FiledialogmanagerAdaptor::monitorFiles()
{
    // handle method call com.deepin.filemanager.filedialogmanager.monitorFiles
    return parent()->monitorFiles();
}

void FiledialogmanagerAdaptor::showBluetoothTransDialog(const QString &id, const QStringList &URIs)
{
    // handle method call com.deepin.filemanager.filedialogmanager.showBluetoothTransDialog
    parent()->showBluetoothTransDialog(id, URIs);
}

